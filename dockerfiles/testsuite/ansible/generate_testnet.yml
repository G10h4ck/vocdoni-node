---
#  USAGE:
#  $ ansible-playbook generate_testnet.yml
#  you can also tweak parameters
#  $ ansible-playbook generate_testnet.yml -e gateways=3 -e seeds=2 -e oracles=2 -e miners=10

- name: generate a testnet using parameters

  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    gateways: 1
    seeds: 1
    oracles: 1
    miners: 5
    chain_id: "vocdoni-testsuite-01"
    dest: "{{playbook_dir}}/"
    docker_compose_file: "{{dest}}/docker-compose.yml"
    genesis_file: "{{dest}}/genesis.json"

  tasks:
    - name: register var for git root (1/2) # used also in docker-compose.yml template
      command: git root
      register: result
      changed_when: false # always show `ok`
    - name: register var for git root (2/2)
      set_fact:
        git_root: "{{ result.stdout }}"
      
    - name: ensure dest directory ({{dest}}) exists
      file: path={{dest}} state=directory

    - name: build dvotecli
      tags: build
      shell: go build -o {{dest}}/dvotecli {{git_root}}/cmd/dvotecli/

    - name: generate random genesis.json
      command: |
        {{dest}}/dvotecli genesis \
          --chainId {{chain_id}} \
          --seeds {{seeds}} \
          --oracles {{oracles}} \
          --miners {{miners}} \
          -w {{dest}}/genesis.json \
          --json
      register: privkeys

    - name: tweak genesis.json max_age_{num_blocks,duration}
      replace:
        path: "{{dest}}/genesis.json"
        after: '"evidence": {'
        before: '}'
        regexp: '"{{item.var}}": "0"'
        replace: '"{{item.var}}": "{{item.value}}"'
      with_items:
        - { var: max_age_num_blocks, value: 100000 }
        - { var: max_age_duration, value: 10000 }

    - name: parse privkeys
      set_fact:
        seed_keys: "{{ (privkeys.stdout | from_json).seeds }}"
        oracle_keys: "{{ (privkeys.stdout | from_json).oracles }}"
        miner_keys: "{{ (privkeys.stdout | from_json).miners }}"
    
    - name: generate docker_compose.yml
      template:
        dest: "{{docker_compose_file}}"
        src: docker-compose.yml

    - name: generate env files
      template:
        src: "{{item}}"
        dest: "{{dest}}"
      with_items:
        - env.gateway
        - env.miner
        - env.oracle
        - env.oracle0key
        - env.seed
        - env.seeds

    - name: output privkeys to console for debugging
      tags: debug
      debug: var=privkeys.stdout
